Option Compare Database
Option Explicit

Type TipRjecnickiZapis
  fst As ADODB.Stream
  fst2 As ADODB.Stream
  nizPrijevoda As String
  slovoZaDatoteku As String
  mapa As String
  datoteka As String
  posljednjaNatuknica As String
  posljednjiPrijevod As String
  posljednjiNizPrijevoda As String
  posljednjaVrstaRijeci As String
  posljednjePocetnoSlovo As String
End Type
  


Public Function generiraj_latex(Tablica As String, ps As String, pt As String, vr As String, mapa As String)
Dim upit As String, tc As DAO.Recordset, rz As TipRjecnickiZapis

upit = " SELECT [%2%], [%4%] AS VR, [%3%] FROM [%1%] ORDER BY %2%, [%4%], [%3%]; "
upit = zamijeni_redom(upit, Tablica, ps, pt, vr)
Set tc = CodeDb.OpenRecordset(upit)

tc.MoveFirst
Call inicijaliziraj_rjecnicki_zapis(rz, mapa)

Do While Not tc.EOF
  Call unesi_u_rjecnik(rz, tc(ps), tc(pt), tc("vr"))
  tc.MoveNext
Loop
Call generiraj_jedan_rjecnicki_zapis(rz)
Call slovo_u_rjecniku(rz, "KRAJ")
End Function



Public Function unesi_u_rjecnik(rz As TipRjecnickiZapis, natuknica As String, prijevod As String, vrstaRijeci As String)
With rz
  If natuknica = .posljednjaNatuknica And vrstaRijeci = .posljednjaVrstaRijeci Then
    If prijevod <> .posljednjiPrijevod Then
      .nizPrijevoda = .nizPrijevoda & ", " & prijevod
    End If
  Else ' .natuknica <> .posljednjaNatuknica Or .vrstaRijeci <> .posljednjaVrstaRijeci
    Call generiraj_jedan_rjecnicki_zapis(rz)
    If Left(natuknica, 1) <> .posljednjePocetnoSlovo Then
      Call slovo_u_rjecniku(rz, Left(natuknica, 1))
    End If
    .nizPrijevoda = prijevod
  End If
  .posljednjaNatuknica = natuknica
  .posljednjiPrijevod = prijevod
  .posljednjaVrstaRijeci = vrstaRijeci
  .posljednjiNizPrijevoda = .nizPrijevoda
End With

End Function



Public Function generiraj_jedan_rjecnicki_zapis(rz As TipRjecnickiZapis)
Dim zaispis As String
Const predlozak = "\term{%1%} {({\em %3%}) %2%}"
With rz
  zaispis = Replace(predlozak, "%1%", .posljednjaNatuknica)
  zaispis = Replace(zaispis, "%2%", .posljednjiNizPrijevoda)
  zaispis = Replace(zaispis, "%3%", .posljednjaVrstaRijeci)
  .fst.WriteText (zaispis & vbCrLf)
End With
End Function




Public Function slovo_u_rjecniku(rz As TipRjecnickiZapis, slovo As String)
Const slova = "abcdefghijklmnopqrstuvwxyz#"

With rz
  If (slovo <> .posljednjePocetnoSlovo And InStr(1, slova, slovo) > 0) Or slovo = "KRAJ" Then
    If .fst.Size > 0 Then
      .fst.Flush
      .datoteka = .mapa & "\" & .slovoZaDatoteku & ".tex"
      .fst.SaveToFile .datoteka, adSaveCreateOverWrite
      .fst.Type = adTypeBinary
      .fst.Position = 3
      .fst.CopyTo .fst2
      .fst2.SaveToFile .datoteka, adSaveCreateOverWrite
      Debug.Print .datoteka
      .fst.Close
      .fst.Open
      .fst.Type = adTypeText
      .fst2.Close
      .fst2.Open
    End If
    .slovoZaDatoteku = slovo
  End If
  
  If slovo <> .posljednjePocetnoSlovo And slovo <> "KRAJ" Then
    .fst.WriteText ("\bigletterc{" & UCase(slovo) & "}" & vbCrLf)
  End If
  .posljednjePocetnoSlovo = slovo
End With
End Function



Public Function zamijeni_redom(s As String, Optional z1 As String = "", Optional z2 As String = "", Optional z3 As String = "", Optional z4 As String = "") As String
Dim pom As String
pom = Replace(s, "%1%", z1)
pom = Replace(pom, "%2%", z2)
pom = Replace(pom, "%3%", z3)
pom = Replace(pom, "%4%", z4)
zamijeni_redom = pom
End Function




Public Function inicijaliziraj_rjecnicki_zapis(rz As TipRjecnickiZapis, mapa As String)
With rz
  .mapa = mapa
  .slovoZaDatoteku = ""
  .posljednjaNatuknica = ""
  .posljednjiPrijevod = ""
  .posljednjiNizPrijevoda = ""
  .posljednjaVrstaRijeci = ""
  .posljednjePocetnoSlovo = ""
  .nizPrijevoda = ""
  Set .fst = New ADODB.Stream
  .fst.Charset = "utf-8"
  .fst.Type = adTypeText
  .fst.Open
  Set .fst2 = New ADODB.Stream
  .fst2.Type = adTypeBinary
  .fst2.Open
End With
End Function



Public Function test()
Dim a As New ADODB.Stream, b As New ADODB.Stream
a.Charset = "utf-8"
a.Type = adTypeText
a.Open
a.WriteText ("Medo bere jagodešðèæž")
a.Position = 5
a.SaveToFile "d:\brisati\a.txt", adSaveCreateOverWrite

a.Type = adTypeBinary
b.Type = adTypeBinary
b.Open
a.Position = 3
a.CopyTo a
b.SaveToFile "d:\brisati\b.txt", adSaveCreateOverWrite
a.Close

End Function